{
  "Metadata": {
    "DcosImageCommit": "722fcc50c4ac556a9484836bf8a3bb4add4bf14d",
    "TemplateGenerationDate": "2016-11-02 21:15:22.013536"
  },
  "Resources": {
    "PublicAgentStack": {
      "DependsOn": [
        "Infrastructure",
        "MasterStack"
      ],
      "Type": "AWS::CloudFormation::Stack",
      "Properties": {
        "TemplateURL": "https://s3.amazonaws.com/asc-dcos/1.8/cloudformation/public.json",
        "Parameters": {
          "PublicAgentInstanceType": {
            "Ref": "PublicAgentInstanceType"
          },
          "CustomAMI": {
            "Ref": "CustomAMI"
          },
          "PublicAgentInstanceCount": {
            "Ref": "PublicAgentInstanceCount"
          },
          "PublicSubnet": { "Fn::If" : [
              "CreatePrerequisites",
              { "Fn::GetAtt": [
                "Infrastructure",
                "Outputs.PublicSubnetId"
              ] },
              { "Ref" : "PublicSubnetId" }
            ] 
          },
          "InternalMasterLoadBalancerDnsName": {
            "Fn::GetAtt": [
              "MasterStack",
              "Outputs.InternalMasterLoadBalancerDnsName"
            ]
          },
          "PublicAgentSecurityGroup": {
            "Fn::GetAtt": [
              "Infrastructure",
              "Outputs.PublicAgentSecurityGroupId"
            ]
          },
          "KeyName": {
            "Ref": "KeyName"
          },
          "PublicAgentRole": {
      
            "Ref": "PublicAgentRole"
          },
    
          "PublicAgentInstanceProfile": {
      
            "Ref": "PublicAgentInstanceProfile"
          }
        },
        "TimeoutInMinutes": "60"
      }
    },
    "Infrastructure": {
      "Type": "AWS::CloudFormation::Stack",
      "Properties": {
        "TemplateURL": "https://s3.amazonaws.com/asc-dcos/1.8/cloudformation/infrastructure.json",
        "Parameters": {
          "Environment" : { "Ref" : "Environment" },
          "VpcCidr" : { "Ref" : "VpcCidr" },
          "VpcId" : { "Ref" : "VpcId" },
          "PublicAgentIngressCidr" : { "Ref" : "PublicAgentIngressCidr" },
          "PrivateSubnetCidr": {
            "Ref": "PrivateSubnetCidr"
          },
          "AdminLocation": {
            "Ref": "AdminLocation"
          },
          "PublicSubnetCidr": {
            "Ref": "PublicSubnetCidr"
          },
          "PublicSubnetId": {
            "Ref": "PublicSubnetId"
          },
          "KeyName": {
            "Ref": "KeyName"
          }
        },
        "TimeoutInMinutes": "60"
      }
    },
    "PrivateAgentStack": {
      "DependsOn": [
        "Infrastructure",
        "MasterStack"
      ],
      "Type": "AWS::CloudFormation::Stack",
      "Properties": {
        "TemplateURL": "https://s3.amazonaws.com/asc-dcos/1.8/cloudformation/private.json",
        "Parameters": {
          "PrivateAgentSecurityGroup": {
            "Fn::GetAtt": [
              "Infrastructure",
              "Outputs.PrivateAgentSecurityGroupId"
            ]
          },
          "PrivateSubnet": { "Fn::If" : [
              "CreatePrerequisites",
              { "Fn::GetAtt": [
                "Infrastructure",
                "Outputs.PrivateSubnetId"
              ] },
              { "Ref" : "PrivateSubnetId" }
            ] 
          },
          "CustomAMI": {
            "Ref": "CustomAMI"
          },
          "PrivateAgentInstanceType": {
            "Ref": "PrivateAgentInstanceType"
          },
          "KeyName": {
            "Ref": "KeyName"
          },
          "PrivateAgentInstanceCount": {
            "Ref": "PrivateAgentInstanceCount"
          },
          "InternalMasterLoadBalancerDnsName": {
            "Fn::GetAtt": [
              "MasterStack",
              "Outputs.InternalMasterLoadBalancerDnsName"
            ]
          },
          "PrivateAgentRole": {
      
            "Ref": "PrivateAgentRole"
          },
    
          "PrivateAgentInstanceProfile": {
      
            "Ref": "PrivateAgentInstanceProfile"
          }
        },
        "TimeoutInMinutes": "60"
      }
    },
    "MasterStack": {
      "DependsOn": [
        "Infrastructure"
      ],
      "Type": "AWS::CloudFormation::Stack",
      "Properties": {
        "TemplateURL": "https://s3.amazonaws.com/asc-dcos/1.8/cloudformation/master.json",
        "Parameters": {
          "LbSecurityGroup": {
            "Fn::GetAtt": [
              "Infrastructure",
              "Outputs.LbSecurityGroupId"
            ]
          },
          "PrivateSubnet": { "Fn::If" : [
              "CreatePrerequisites",
              { "Fn::GetAtt": [
                "Infrastructure",
                "Outputs.PrivateSubnetId"
              ] },
              { "Ref" : "PrivateSubnetId" }
            ] 
          },
          "KeyName": {
            "Ref": "KeyName"
          },
          "PrivateAgentSecurityGroup": {
            "Fn::GetAtt": [
              "Infrastructure",
              "Outputs.PrivateAgentSecurityGroupId"
            ]
          },
          "AdminSecurityGroup": {
            "Fn::GetAtt": [
              "Infrastructure",
              "Outputs.AdminSecurityGroupId"
            ]
          },
          "MasterSecurityGroup": {
            "Fn::GetAtt": [
              "Infrastructure",
              "Outputs.MasterSecurityGroupId"
            ]
          },
          "CustomAMI": {
            "Ref": "CustomAMI"
          },
          "PublicAgentSecurityGroup": {
            "Fn::GetAtt": [
              "Infrastructure",
              "Outputs.PublicAgentSecurityGroupId"
            ]
          },
          "PublicSubnet": { "Fn::If" : [
              "CreatePrerequisites",
              { "Fn::GetAtt": [
                "Infrastructure",
                "Outputs.PublicSubnetId"
              ] },
              { "Ref" : "PublicSubnetId" }
            ] 
          },
          "ExhibitorS3Bucket": {
	    "Ref": "ExhibitorS3Bucket"
          },
          "MasterInstanceType": {
            "Ref": "MasterInstanceType"
          },
          "MasterRole": {
      
            "Ref": "MasterRole"
          },
   
          "MasterInstanceProfile": {
      
            "Ref": "MasterInstanceProfile"
          }
        },
        "TimeoutInMinutes": "60"
      }
    }
  },
  "Outputs": {
    "OutputFromNestedStack": {
      "Value": {
        "Fn::GetAtt": [
          "MasterStack",
          "Outputs.MasterDNSName"
        ]
      }
    },
    "StackRef": {
      "Value": {
        "Ref": "MasterStack"
      }
    }
  },
  "AWSTemplateFormatVersion": "2010-09-09",
  "Parameters": {
    "Environment" : {
      "Description" : "Target deployment environment",
      "Type" : "String",
      "Default" : "aws",
      "AllowedValues" : [ "aws" , "uc2s" , "sc2s", "c2s" ]
    },
    "PrivateSubnetCidr" : {
      "Description" : "The CIDR block for the private subnet",
      "Type" : "String",
      "MinLength" : "9",
      "MaxLength" : "18",
      "Default" : "10.0.0.0/17",
      "AllowedPattern" : "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})",
      "ConstraintDescription" : "must be a valid IP CIDR range of the form x.x.x.x/x."
    },
    "CustomAMI": {
      "AllowedPattern": "(default|ami-[a-f0-9]{8})",
      "Default": "default",
      "Type": "String",
      "Description": "\nExisting AMI in the deploy region which has all DC/OS pre-requisites installed or 'default'"
    },
    "KeyName": {
      "Description": "\nSpecify your AWS EC2 Key Pair.",
      "Type": "AWS::EC2::KeyPair::KeyName"
    },
    "PrivateAgentInstanceCount": {
      "Default": "5",
      "Type": "Number",
      "Description": "\nSpecify the number of private agent nodes or accept the default."
    },
    "MasterInstanceType": {
      "Default": "m3.xlarge",
      "Type": "String",
      "Description": "\nRegion-specific instance type. E.g. m3.xlarge"
    },
    "PrivateAgentInstanceType": {
      "Default": "m3.xlarge",
      "Type": "String",
      "Description": "\nRegion-specific instance type. E.g. m3.xlarge"
    },
    "PublicAgentInstanceCount": {
      "Default": "5",
      "Type": "Number",
      "Description": "\nSpecify the number of public agent nodes or accept the default."
    },
    "PublicSubnetCidr" : {
      "Description" : "The CIDR block for the public subnet",
      "Type" : "String",
      "MinLength" : "9",
      "MaxLength" : "18",
      "Default" : "10.0.128.0/20",
      "AllowedPattern" : "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})",
      "ConstraintDescription" : "must be a valid IP CIDR range of the form x.x.x.x/x."
    },
    "PublicSubnetId" : {
      "Description" : "[optional] ID of pre-existing public subnet to re-use (C2S)",
      "Type" : "String",
      "Default" : ""
     },
    "PrivateSubnetId" : {
        "Description" : "[optional] ID of pre-existing private subnet to re-use (C2S)",
        "Type" : "String",
        "Default" : ""
    },
    "AdminLocation" : {
      "Description" : "Specify the IP range to whitelist for access to the admin zone. Must be a valid CIDR.",
      "Type" : "String",
      "MinLength" : "9",
      "MaxLength" : "18",
      "Default" : "128.229.4.2/32",
      "AllowedPattern" : "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})",
      "ConstraintDescription" : "must be a valid IP CIDR range of the form x.x.x.x/x."
    },
    "PublicAgentInstanceType": {
      "Default": "m3.xlarge",
      "Type": "String",
      "Description": "\nRegion-specific instance type. E.g. m3.xlarge"
    },
    "ExhibitorS3Bucket": {
      "Description": "\nName of the Exhibitor S3 Bucket",
      "Type": "String"
    },
    "PublicAgentRole": {
      
      "Description": "\nPublic Agent Role",
      
      "Type": "String"
    
    },
    
    "PublicAgentInstanceProfile": {
      
      "Description": "\nPublic Agent Instance Profile",
     
      "Type": "String"
    
    },
    "PrivateAgentRole": {
      
      "Description": "\nPrivate Agent Role",
      
      "Type": "String"
    
    },
    
    "PrivateAgentInstanceProfile": {
      
      "Description": "\nPrivate Agent Instance Profile",
     
      "Type": "String"
    
    },
    "MasterRole": {
      
      "Description": "\nMaster Role",
      
      "Type": "String"
    
    },
    
    "MasterInstanceProfile": {
      
      "Description": "\nMaster Instance Profile",
     
      "Type": "String"
    
    },

    "VpcCidr" : {
      "Description" : "The CIDR block the VPC will cover",
      "Type" : "String",
      "MinLength" : "9",
      "MaxLength" : "18",
      "Default" : "10.0.0.0/16",
      "AllowedPattern" : "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})",
      "ConstraintDescription" : "must be a valid IP CIDR range of the form x.x.x.x/x."
    },

    "VpcId" : {
      "Description" : "[optional] ID of pre-existing VPC to re-use (C2S)",
      "Type" : "String",
      "Default" : ""
    },

    "PublicAgentIngressCidr" : {
      "Description" : "Specify the IP range to whitelist for access to services running on public agents.",
      "Type" : "String",
      "MinLength" : "9",
      "MaxLength" : "18",
      "Default" : "128.229.4.2/32",
      "AllowedPattern" : "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})",
      "ConstraintDescription" : "must be a valid IP CIDR range of the form x.x.x.x/x."
    }
  },

  "Conditions" : {
    "CreatePrerequisites" : {
      "Fn::Not": [{
        "Fn::Equals" : [ { "Ref" : "Environment" } , "c2s" ]
      }] 
    }
  }
}